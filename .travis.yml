language: node_js           # Set language for the environment
node_js: node               # Use latest version of node.js
os:                         # Simultaneous environments
  - linux                   # Linux - for testing and future builds
  - osx                     # Mac - for testing and builds
#cache:                      # Speed up builds by caching things
#  directories:              # Add directories relative to root
#  - node_modules            # cache node modules to save 1-3 minutes
before_deploy:              # Run these before attempting to deploy
  - npm install -g electron-forge@3.0.5 # Install electron-forge for build/make
  - npm run make            # Command that builds the app for the architecture
addons:
  apt:
    packages:
      - xvfb                # Dependency for headless testing via virtual frame buffer
install:
  - export DISPLAY=':99.0'  # https://electron.atom.io/docs/tutorial/testing-on-headless-ci/
  - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 & # Create a virtual display
  - npm install             # Run npm install
  - npm install -g electron-mocha@4.0.0 # Install electron-mocha with -g to install cli
deploy:                     # Configuration for releases
  provider: releases
  name: $TRAVIS_TAG         # Name for the release to upload the files
  tag_name: $TRAVIS_TAG     # Name of the tag to use for the release (draft doesn't do this by default)
  file_glob: true           # Set the mode for file to use *
  file: out/make/*          # Upload all files generated during make/build
  overwrite: true           # Overwrite the file if it exists
  skip_cleanup: true        # Don't wait to cleanup
  prerelease: true          # Don't make this the latest release, mark it as prerelease
  draft: true               # Don't publish this to the public, make it a draft
  on:                       # Tell it when to deploy/release
    tags: true              # We only create a release on tags
  api_key:                  # Github personal access token encrypted with travis encrypt command. Will need to re-encrypt for each repository, not useful for others.
   secure: TBHqs3ecfGX7s3lYsR3zfey/xJYClM9+Vkh+nibiK0HkZRfTLNI/1pHKntf0Mrlr3wH2mVYFRzKa3HSoM1EKiYzoPp2k9NYTUimB+JE+f7wr72asY/Asoo8uZKwR0SaqLIzrXmCgn44xmQO2oVGPSO0/kZ0V7lMik40rBJfc1DHXfpO0vz9dK1Fn17LORG6/FEpqdrIt51GCp4UD867CJUtsD1GUZxOnvrrIG805jV3m0ms37POzKBxFWi3SEn3KBwbmS0aB+vcsphjtvAgIh81D5FKtd8TIj4nAyqcAal8sFjcOOFENhYuhuUOXxnIN3B0YJpPah8pzHpTSU4+VAwvliwl3Jr0xQRU/RRl5eCtbV8pkvu5xYbzL9gfCHS9MIcoGf1npyBB6/SbO8J0/4Gfvi+ZmhjzavoxK5WhrySm3YF4noVxP3kn/Z3bBtXPeCdO1E9csYvvVw8fkwV6UaiBxllhbOUUtnlh4OTrMxord/uu5ZauyD0bMfajFM+6/Md5mHh7JzjLWA37Jnuqs3YSkrs/N8Vq9bfKuBu5saPnXRFIujCwe17u27GUqUTYXd1Hs9V4hOv+K8ZMPn49bcnkggVswNJx1VObpE97Rqu4by81e1BOq1uAGDUVljICkMDubjk/e4NyHhkcSumdTnysyw2DzB=zadmk0Dc7W85Rs=
