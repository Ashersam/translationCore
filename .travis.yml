language: node_js
node_js:
  - 'node'
os:
  - linux
  - osx
cache:
  directories:
    - "node_modules"
before_script:
- export DISPLAY=:99.0
- npm i -g xvfb-maybe@0.2.1
- 'if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    sh -e /etc/init.d/xvfb start ;
  fi'
script:
- xvfb-maybe npm test
before_deploy:
- npm i -g babel-cli
- npm i -g electron-builder@19.8.0 ;
- 'if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    babel src --out-dir src ;
    babel tC_apps --out-dir tC_apps ;
    build --prerelease --draft --mac ;
  else
    sudo add-apt-repository --yes ppa:ubuntu-wine/ppa ;
    sudo add-apt-repository --yes ppa:arx/release ;
    sudo apt-get update -d ;
    sudo apt-get install -y -q innoextract wine python-software-properties ;
    mkdir installers ;
    curl -L https://github.com/git-for-windows/git/releases/download/v2.9.2.windows.1/Git-2.9.2-32-bit.exe > ./installers/GitInstaller-32.exe ;
    curl -L https://github.com/git-for-windows/git/releases/download/v2.9.2.windows.1/Git-2.9.2-64-bit.exe > ./installers/GitInstaller-64.exe ;
    chmod +x ./scripts/inno/InnoInstall.sh ;
    "./scripts/inno/InnoInstall.sh" ;
    cd /home/travis/build/unfoldingWord-dev/translationCore ;
    rm -rf tmp ;
    chmod +x ./scripts/builds/windows.sh ;
    "./scripts/builds/windows.sh" ;
  fi'
deploy:
- provider: releases
  skip_cleanup: true
  file: "./dist/translationCore-win32-ia32/installer/translationCoreSetup.exe"
  on:
    repo: unfoldingWord-dev/translationCore
    branch: master
    tags: true
    condition: "$TRAVIS_OS_NAME == linux"
- provider: releases
  skip_cleanup: true
  on:
    repo: unfoldingWord-dev/translationCore
    branch: master
    tags: true
    condition: "$TRAVIS_OS_NAME == osx"
