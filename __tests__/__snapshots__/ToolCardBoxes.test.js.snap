// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`translationNotes should have 4 boxes checked 1`] = `
<WithStyles(ToolCardBoxes)
  availableCategories={
    Object {
      "culture": Array [
        "figs-explicit",
      ],
      "discourse": Array [
        "writing-background",
        "writing-endofstory",
      ],
      "figures": Array [
        "figs-idiom",
        "figs-irony",
        "figs-metaphor",
        "figs-rquestion",
        "figs-simile",
        "figs-apostrophe",
        "figs-euphemism",
      ],
      "grammar": Array [
        "figs-hypo",
        "figs-activepassive",
        "figs-gendernotations",
        "figs-pronouns",
        "figs-you",
        "figs-123person",
        "figs-abstractnouns",
        "figs-distinguish",
      ],
      "numbers": Array [
        "translate-numbers",
        "translate-fraction",
      ],
    }
  }
  bookId="tit"
  checks={
    Array [
      "figs-gendernotations",
      "figs-pronouns",
      "figs-irony",
    ]
  }
  onChecked={[Function]}
  selectedCategories={
    Array [
      "writing-background",
      "translate-numbers",
      "translate-fraction",
      "figs-idiom",
      "figs-irony",
      "figs-metaphor",
      "figs-rquestion",
      "figs-simile",
      "figs-apostrophe",
      "figs-explicit",
      "figs-hypo",
      "figs-activepassive",
      "figs-pronouns",
      "figs-you",
      "figs-123person",
      "figs-abstractnouns",
    ]
  }
  selectedGL="en"
  showPopover={[Function]}
  toolName="translationNotes"
  translate={[Function]}
>
  <ToolCardBoxes
    availableCategories={
      Object {
        "culture": Array [
          "figs-explicit",
        ],
        "discourse": Array [
          "writing-background",
          "writing-endofstory",
        ],
        "figures": Array [
          "figs-idiom",
          "figs-irony",
          "figs-metaphor",
          "figs-rquestion",
          "figs-simile",
          "figs-apostrophe",
          "figs-euphemism",
        ],
        "grammar": Array [
          "figs-hypo",
          "figs-activepassive",
          "figs-gendernotations",
          "figs-pronouns",
          "figs-you",
          "figs-123person",
          "figs-abstractnouns",
          "figs-distinguish",
        ],
        "numbers": Array [
          "translate-numbers",
          "translate-fraction",
        ],
      }
    }
    bookId="tit"
    checks={
      Array [
        "figs-gendernotations",
        "figs-pronouns",
        "figs-irony",
      ]
    }
    classes={
      Object {
        "checked": "ToolCardBoxes-checked-2",
        "root": "ToolCardBoxes-root-1",
      }
    }
    onChecked={[Function]}
    selectedCategories={
      Array [
        "writing-background",
        "translate-numbers",
        "translate-fraction",
        "figs-idiom",
        "figs-irony",
        "figs-metaphor",
        "figs-rquestion",
        "figs-simile",
        "figs-apostrophe",
        "figs-explicit",
        "figs-hypo",
        "figs-activepassive",
        "figs-pronouns",
        "figs-you",
        "figs-123person",
        "figs-abstractnouns",
      ]
    }
    selectedGL="en"
    showPopover={[Function]}
    toolName="translationNotes"
    translate={[Function]}
  >
    <div
      style={
        Object {
          "margin": "0 2% 0 6%",
        }
      }
    >
      <div
        key="0"
        style={
          Object {
            "display": "flex",
            "flexWrap": "wrap",
            "margin": "0 0 5 0",
            "width": "100%",
          }
        }
      >
        <div
          style={
            Object {
              "display": "flex",
              "width": "92%",
            }
          }
        >
          <div
            style={
              Object {
                "width": "38px",
              }
            }
          >
            <WithStyles(Checkbox)
              checked={false}
              classes={
                Object {
                  "checked": "ToolCardBoxes-checked-2",
                  "root": "ToolCardBoxes-root-1",
                }
              }
              indeterminate={true}
              onChange={[Function]}
            >
              <Checkbox
                checked={false}
                checkedIcon={<pure(CheckBox) />}
                classes={
                  Object {
                    "checked": "MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                    "colorPrimary": "MuiCheckbox-colorPrimary-7",
                    "colorSecondary": "MuiCheckbox-colorSecondary-8",
                    "disabled": "MuiCheckbox-disabled-5",
                    "indeterminate": "MuiCheckbox-indeterminate-6",
                    "root": "MuiCheckbox-root-3 ToolCardBoxes-root-1",
                  }
                }
                color="secondary"
                icon={<pure(CheckBoxOutlineBlank) />}
                indeterminate={true}
                indeterminateIcon={<pure(IndeterminateCheckBox) />}
                onChange={[Function]}
              >
                <WithStyles(WithFormControlContext(SwitchBase))
                  checked={false}
                  checkedIcon={<pure(IndeterminateCheckBox) />}
                  className="MuiCheckbox-indeterminate-6"
                  classes={
                    Object {
                      "checked": "MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                      "disabled": "MuiCheckbox-disabled-5",
                      "root": "MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8",
                    }
                  }
                  icon={<pure(IndeterminateCheckBox) />}
                  inputProps={
                    Object {
                      "data-indeterminate": true,
                    }
                  }
                  onChange={[Function]}
                  type="checkbox"
                >
                  <WithFormControlContext(SwitchBase)
                    checked={false}
                    checkedIcon={<pure(IndeterminateCheckBox) />}
                    className="MuiCheckbox-indeterminate-6"
                    classes={
                      Object {
                        "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                        "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                        "input": "MuiPrivateSwitchBase-input-12",
                        "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8",
                      }
                    }
                    icon={<pure(IndeterminateCheckBox) />}
                    inputProps={
                      Object {
                        "data-indeterminate": true,
                      }
                    }
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <SwitchBase
                      checked={false}
                      checkedIcon={<pure(IndeterminateCheckBox) />}
                      className="MuiCheckbox-indeterminate-6"
                      classes={
                        Object {
                          "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                          "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                          "input": "MuiPrivateSwitchBase-input-12",
                          "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(IndeterminateCheckBox) />}
                      inputProps={
                        Object {
                          "data-indeterminate": true,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithStyles(IconButton)
                        className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiCheckbox-indeterminate-6"
                        component="span"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        tabIndex={null}
                      >
                        <IconButton
                          className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiCheckbox-indeterminate-6"
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit-14",
                              "colorPrimary": "MuiIconButton-colorPrimary-15",
                              "colorSecondary": "MuiIconButton-colorSecondary-16",
                              "disabled": "MuiIconButton-disabled-17",
                              "label": "MuiIconButton-label-18",
                              "root": "MuiIconButton-root-13",
                            }
                          }
                          color="default"
                          component="span"
                          disabled={false}
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <WithStyles(ButtonBase)
                            centerRipple={true}
                            className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiCheckbox-indeterminate-6"
                            component="span"
                            disabled={false}
                            focusRipple={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <ButtonBase
                              centerRipple={true}
                              className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiCheckbox-indeterminate-6"
                              classes={
                                Object {
                                  "disabled": "MuiButtonBase-disabled-20",
                                  "focusVisible": "MuiButtonBase-focusVisible-21",
                                  "root": "MuiButtonBase-root-19",
                                }
                              }
                              component="span"
                              disableRipple={false}
                              disableTouchRipple={false}
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                              type="button"
                            >
                              <span
                                className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiCheckbox-indeterminate-6"
                                onBlur={[Function]}
                                onContextMenu={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={null}
                              >
                                <span
                                  className="MuiIconButton-label-18"
                                >
                                  <pure(IndeterminateCheckBox)>
                                    <IndeterminateCheckBox>
                                      <WithStyles(SvgIcon)>
                                        <SvgIcon
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction-25",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                              "colorError": "MuiSvgIcon-colorError-26",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                              "root": "MuiSvgIcon-root-22",
                                            }
                                          }
                                          color="inherit"
                                          component="svg"
                                          fontSize="default"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="MuiSvgIcon-root-22"
                                            focusable="false"
                                            role="presentation"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
                                            />
                                          </svg>
                                        </SvgIcon>
                                      </WithStyles(SvgIcon)>
                                    </IndeterminateCheckBox>
                                  </pure(IndeterminateCheckBox)>
                                  <input
                                    checked={false}
                                    className="MuiPrivateSwitchBase-input-12"
                                    data-indeterminate={true}
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                </span>
                                <NoSsr
                                  defer={false}
                                  fallback={null}
                                >
                                  <WithStyles(TouchRipple)
                                    center={true}
                                    innerRef={[Function]}
                                  >
                                    <TouchRipple
                                      center={true}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child-35",
                                          "childLeaving": "MuiTouchRipple-childLeaving-36",
                                          "childPulsate": "MuiTouchRipple-childPulsate-37",
                                          "ripple": "MuiTouchRipple-ripple-32",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-34",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible-33",
                                          "root": "MuiTouchRipple-root-31",
                                        }
                                      }
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        className="MuiTouchRipple-root-31"
                                        component="span"
                                        enter={true}
                                        exit={true}
                                      >
                                        <span
                                          className="MuiTouchRipple-root-31"
                                        />
                                      </TransitionGroup>
                                    </TouchRipple>
                                  </WithStyles(TouchRipple)>
                                </NoSsr>
                              </span>
                            </ButtonBase>
                          </WithStyles(ButtonBase)>
                        </IconButton>
                      </WithStyles(IconButton)>
                    </SwitchBase>
                  </WithFormControlContext(SwitchBase)>
                </WithStyles(WithFormControlContext(SwitchBase))>
              </Checkbox>
            </WithStyles(Checkbox)>
          </div>
          <div>
            translated: tool_card_categories.discourse
          </div>
        </div>
        <div
          style={
            Object {
              "alignSelf": "flex-end",
            }
          }
        >
          <Glyphicon
            bsClass="glyphicon"
            glyph="chevron-down"
            onClick={[Function]}
            style={
              Object {
                "fontSize": "18px",
                "margin": "0 12px 0 0",
                "textAlign": "right",
                "width": "20px",
              }
            }
          >
            <span
              className="glyphicon glyphicon-chevron-down"
              onClick={[Function]}
              style={
                Object {
                  "fontSize": "18px",
                  "margin": "0 12px 0 0",
                  "textAlign": "right",
                  "width": "20px",
                }
              }
            />
          </Glyphicon>
        </div>
      </div>
      <div
        key="1"
        style={
          Object {
            "display": "flex",
            "flexWrap": "wrap",
            "margin": "0 0 5 0",
            "width": "100%",
          }
        }
      >
        <div
          style={
            Object {
              "display": "flex",
              "width": "92%",
            }
          }
        >
          <div
            style={
              Object {
                "width": "38px",
              }
            }
          >
            <WithStyles(Checkbox)
              checked={true}
              classes={
                Object {
                  "checked": "ToolCardBoxes-checked-2",
                  "root": "ToolCardBoxes-root-1",
                }
              }
              indeterminate={false}
              onChange={[Function]}
            >
              <Checkbox
                checked={true}
                checkedIcon={<pure(CheckBox) />}
                classes={
                  Object {
                    "checked": "MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                    "colorPrimary": "MuiCheckbox-colorPrimary-7",
                    "colorSecondary": "MuiCheckbox-colorSecondary-8",
                    "disabled": "MuiCheckbox-disabled-5",
                    "indeterminate": "MuiCheckbox-indeterminate-6",
                    "root": "MuiCheckbox-root-3 ToolCardBoxes-root-1",
                  }
                }
                color="secondary"
                icon={<pure(CheckBoxOutlineBlank) />}
                indeterminate={false}
                indeterminateIcon={<pure(IndeterminateCheckBox) />}
                onChange={[Function]}
              >
                <WithStyles(WithFormControlContext(SwitchBase))
                  checked={true}
                  checkedIcon={<pure(CheckBox) />}
                  className=""
                  classes={
                    Object {
                      "checked": "MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                      "disabled": "MuiCheckbox-disabled-5",
                      "root": "MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8",
                    }
                  }
                  icon={<pure(CheckBoxOutlineBlank) />}
                  inputProps={
                    Object {
                      "data-indeterminate": false,
                    }
                  }
                  onChange={[Function]}
                  type="checkbox"
                >
                  <WithFormControlContext(SwitchBase)
                    checked={true}
                    checkedIcon={<pure(CheckBox) />}
                    className=""
                    classes={
                      Object {
                        "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                        "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                        "input": "MuiPrivateSwitchBase-input-12",
                        "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8",
                      }
                    }
                    icon={<pure(CheckBoxOutlineBlank) />}
                    inputProps={
                      Object {
                        "data-indeterminate": false,
                      }
                    }
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <SwitchBase
                      checked={true}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                          "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                          "input": "MuiPrivateSwitchBase-input-12",
                          "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithStyles(IconButton)
                        className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2"
                        component="span"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        tabIndex={null}
                      >
                        <IconButton
                          className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2"
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit-14",
                              "colorPrimary": "MuiIconButton-colorPrimary-15",
                              "colorSecondary": "MuiIconButton-colorSecondary-16",
                              "disabled": "MuiIconButton-disabled-17",
                              "label": "MuiIconButton-label-18",
                              "root": "MuiIconButton-root-13",
                            }
                          }
                          color="default"
                          component="span"
                          disabled={false}
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <WithStyles(ButtonBase)
                            centerRipple={true}
                            className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2"
                            component="span"
                            disabled={false}
                            focusRipple={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <ButtonBase
                              centerRipple={true}
                              className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2"
                              classes={
                                Object {
                                  "disabled": "MuiButtonBase-disabled-20",
                                  "focusVisible": "MuiButtonBase-focusVisible-21",
                                  "root": "MuiButtonBase-root-19",
                                }
                              }
                              component="span"
                              disableRipple={false}
                              disableTouchRipple={false}
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                              type="button"
                            >
                              <span
                                className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2"
                                onBlur={[Function]}
                                onContextMenu={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={null}
                              >
                                <span
                                  className="MuiIconButton-label-18"
                                >
                                  <pure(CheckBox)>
                                    <CheckBox>
                                      <WithStyles(SvgIcon)>
                                        <SvgIcon
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction-25",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                              "colorError": "MuiSvgIcon-colorError-26",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                              "root": "MuiSvgIcon-root-22",
                                            }
                                          }
                                          color="inherit"
                                          component="svg"
                                          fontSize="default"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="MuiSvgIcon-root-22"
                                            focusable="false"
                                            role="presentation"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                            />
                                          </svg>
                                        </SvgIcon>
                                      </WithStyles(SvgIcon)>
                                    </CheckBox>
                                  </pure(CheckBox)>
                                  <input
                                    checked={true}
                                    className="MuiPrivateSwitchBase-input-12"
                                    data-indeterminate={false}
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                </span>
                                <NoSsr
                                  defer={false}
                                  fallback={null}
                                >
                                  <WithStyles(TouchRipple)
                                    center={true}
                                    innerRef={[Function]}
                                  >
                                    <TouchRipple
                                      center={true}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child-35",
                                          "childLeaving": "MuiTouchRipple-childLeaving-36",
                                          "childPulsate": "MuiTouchRipple-childPulsate-37",
                                          "ripple": "MuiTouchRipple-ripple-32",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-34",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible-33",
                                          "root": "MuiTouchRipple-root-31",
                                        }
                                      }
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        className="MuiTouchRipple-root-31"
                                        component="span"
                                        enter={true}
                                        exit={true}
                                      >
                                        <span
                                          className="MuiTouchRipple-root-31"
                                        />
                                      </TransitionGroup>
                                    </TouchRipple>
                                  </WithStyles(TouchRipple)>
                                </NoSsr>
                              </span>
                            </ButtonBase>
                          </WithStyles(ButtonBase)>
                        </IconButton>
                      </WithStyles(IconButton)>
                    </SwitchBase>
                  </WithFormControlContext(SwitchBase)>
                </WithStyles(WithFormControlContext(SwitchBase))>
              </Checkbox>
            </WithStyles(Checkbox)>
          </div>
          <div>
            translated: tool_card_categories.numbers
          </div>
        </div>
        <div
          style={
            Object {
              "alignSelf": "flex-end",
            }
          }
        >
          <Glyphicon
            bsClass="glyphicon"
            glyph="chevron-down"
            onClick={[Function]}
            style={
              Object {
                "fontSize": "18px",
                "margin": "0 12px 0 0",
                "textAlign": "right",
                "width": "20px",
              }
            }
          >
            <span
              className="glyphicon glyphicon-chevron-down"
              onClick={[Function]}
              style={
                Object {
                  "fontSize": "18px",
                  "margin": "0 12px 0 0",
                  "textAlign": "right",
                  "width": "20px",
                }
              }
            />
          </Glyphicon>
        </div>
      </div>
      <div
        key="2"
        style={
          Object {
            "display": "flex",
            "flexWrap": "wrap",
            "margin": "0 0 5 0",
            "width": "100%",
          }
        }
      >
        <div
          style={
            Object {
              "display": "flex",
              "width": "92%",
            }
          }
        >
          <div
            style={
              Object {
                "width": "38px",
              }
            }
          >
            <WithStyles(Checkbox)
              checked={false}
              classes={
                Object {
                  "checked": "ToolCardBoxes-checked-2",
                  "root": "ToolCardBoxes-root-1",
                }
              }
              indeterminate={true}
              onChange={[Function]}
            >
              <Checkbox
                checked={false}
                checkedIcon={<pure(CheckBox) />}
                classes={
                  Object {
                    "checked": "MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                    "colorPrimary": "MuiCheckbox-colorPrimary-7",
                    "colorSecondary": "MuiCheckbox-colorSecondary-8",
                    "disabled": "MuiCheckbox-disabled-5",
                    "indeterminate": "MuiCheckbox-indeterminate-6",
                    "root": "MuiCheckbox-root-3 ToolCardBoxes-root-1",
                  }
                }
                color="secondary"
                icon={<pure(CheckBoxOutlineBlank) />}
                indeterminate={true}
                indeterminateIcon={<pure(IndeterminateCheckBox) />}
                onChange={[Function]}
              >
                <WithStyles(WithFormControlContext(SwitchBase))
                  checked={false}
                  checkedIcon={<pure(IndeterminateCheckBox) />}
                  className="MuiCheckbox-indeterminate-6"
                  classes={
                    Object {
                      "checked": "MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                      "disabled": "MuiCheckbox-disabled-5",
                      "root": "MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8",
                    }
                  }
                  icon={<pure(IndeterminateCheckBox) />}
                  inputProps={
                    Object {
                      "data-indeterminate": true,
                    }
                  }
                  onChange={[Function]}
                  type="checkbox"
                >
                  <WithFormControlContext(SwitchBase)
                    checked={false}
                    checkedIcon={<pure(IndeterminateCheckBox) />}
                    className="MuiCheckbox-indeterminate-6"
                    classes={
                      Object {
                        "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                        "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                        "input": "MuiPrivateSwitchBase-input-12",
                        "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8",
                      }
                    }
                    icon={<pure(IndeterminateCheckBox) />}
                    inputProps={
                      Object {
                        "data-indeterminate": true,
                      }
                    }
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <SwitchBase
                      checked={false}
                      checkedIcon={<pure(IndeterminateCheckBox) />}
                      className="MuiCheckbox-indeterminate-6"
                      classes={
                        Object {
                          "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                          "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                          "input": "MuiPrivateSwitchBase-input-12",
                          "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(IndeterminateCheckBox) />}
                      inputProps={
                        Object {
                          "data-indeterminate": true,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithStyles(IconButton)
                        className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiCheckbox-indeterminate-6"
                        component="span"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        tabIndex={null}
                      >
                        <IconButton
                          className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiCheckbox-indeterminate-6"
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit-14",
                              "colorPrimary": "MuiIconButton-colorPrimary-15",
                              "colorSecondary": "MuiIconButton-colorSecondary-16",
                              "disabled": "MuiIconButton-disabled-17",
                              "label": "MuiIconButton-label-18",
                              "root": "MuiIconButton-root-13",
                            }
                          }
                          color="default"
                          component="span"
                          disabled={false}
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <WithStyles(ButtonBase)
                            centerRipple={true}
                            className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiCheckbox-indeterminate-6"
                            component="span"
                            disabled={false}
                            focusRipple={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <ButtonBase
                              centerRipple={true}
                              className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiCheckbox-indeterminate-6"
                              classes={
                                Object {
                                  "disabled": "MuiButtonBase-disabled-20",
                                  "focusVisible": "MuiButtonBase-focusVisible-21",
                                  "root": "MuiButtonBase-root-19",
                                }
                              }
                              component="span"
                              disableRipple={false}
                              disableTouchRipple={false}
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                              type="button"
                            >
                              <span
                                className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiCheckbox-indeterminate-6"
                                onBlur={[Function]}
                                onContextMenu={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={null}
                              >
                                <span
                                  className="MuiIconButton-label-18"
                                >
                                  <pure(IndeterminateCheckBox)>
                                    <IndeterminateCheckBox>
                                      <WithStyles(SvgIcon)>
                                        <SvgIcon
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction-25",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                              "colorError": "MuiSvgIcon-colorError-26",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                              "root": "MuiSvgIcon-root-22",
                                            }
                                          }
                                          color="inherit"
                                          component="svg"
                                          fontSize="default"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="MuiSvgIcon-root-22"
                                            focusable="false"
                                            role="presentation"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
                                            />
                                          </svg>
                                        </SvgIcon>
                                      </WithStyles(SvgIcon)>
                                    </IndeterminateCheckBox>
                                  </pure(IndeterminateCheckBox)>
                                  <input
                                    checked={false}
                                    className="MuiPrivateSwitchBase-input-12"
                                    data-indeterminate={true}
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                </span>
                                <NoSsr
                                  defer={false}
                                  fallback={null}
                                >
                                  <WithStyles(TouchRipple)
                                    center={true}
                                    innerRef={[Function]}
                                  >
                                    <TouchRipple
                                      center={true}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child-35",
                                          "childLeaving": "MuiTouchRipple-childLeaving-36",
                                          "childPulsate": "MuiTouchRipple-childPulsate-37",
                                          "ripple": "MuiTouchRipple-ripple-32",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-34",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible-33",
                                          "root": "MuiTouchRipple-root-31",
                                        }
                                      }
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        className="MuiTouchRipple-root-31"
                                        component="span"
                                        enter={true}
                                        exit={true}
                                      >
                                        <span
                                          className="MuiTouchRipple-root-31"
                                        />
                                      </TransitionGroup>
                                    </TouchRipple>
                                  </WithStyles(TouchRipple)>
                                </NoSsr>
                              </span>
                            </ButtonBase>
                          </WithStyles(ButtonBase)>
                        </IconButton>
                      </WithStyles(IconButton)>
                    </SwitchBase>
                  </WithFormControlContext(SwitchBase)>
                </WithStyles(WithFormControlContext(SwitchBase))>
              </Checkbox>
            </WithStyles(Checkbox)>
          </div>
          <div>
            translated: tool_card_categories.figures
          </div>
        </div>
        <div
          style={
            Object {
              "alignSelf": "flex-end",
            }
          }
        >
          <Glyphicon
            bsClass="glyphicon"
            glyph="chevron-down"
            onClick={[Function]}
            style={
              Object {
                "fontSize": "18px",
                "margin": "0 12px 0 0",
                "textAlign": "right",
                "width": "20px",
              }
            }
          >
            <span
              className="glyphicon glyphicon-chevron-down"
              onClick={[Function]}
              style={
                Object {
                  "fontSize": "18px",
                  "margin": "0 12px 0 0",
                  "textAlign": "right",
                  "width": "20px",
                }
              }
            />
          </Glyphicon>
        </div>
      </div>
      <div
        key="3"
        style={
          Object {
            "display": "flex",
            "flexWrap": "wrap",
            "margin": "0 0 5 0",
            "width": "100%",
          }
        }
      >
        <div
          style={
            Object {
              "display": "flex",
              "width": "92%",
            }
          }
        >
          <div
            style={
              Object {
                "width": "38px",
              }
            }
          >
            <WithStyles(Checkbox)
              checked={true}
              classes={
                Object {
                  "checked": "ToolCardBoxes-checked-2",
                  "root": "ToolCardBoxes-root-1",
                }
              }
              indeterminate={false}
              onChange={[Function]}
            >
              <Checkbox
                checked={true}
                checkedIcon={<pure(CheckBox) />}
                classes={
                  Object {
                    "checked": "MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                    "colorPrimary": "MuiCheckbox-colorPrimary-7",
                    "colorSecondary": "MuiCheckbox-colorSecondary-8",
                    "disabled": "MuiCheckbox-disabled-5",
                    "indeterminate": "MuiCheckbox-indeterminate-6",
                    "root": "MuiCheckbox-root-3 ToolCardBoxes-root-1",
                  }
                }
                color="secondary"
                icon={<pure(CheckBoxOutlineBlank) />}
                indeterminate={false}
                indeterminateIcon={<pure(IndeterminateCheckBox) />}
                onChange={[Function]}
              >
                <WithStyles(WithFormControlContext(SwitchBase))
                  checked={true}
                  checkedIcon={<pure(CheckBox) />}
                  className=""
                  classes={
                    Object {
                      "checked": "MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                      "disabled": "MuiCheckbox-disabled-5",
                      "root": "MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8",
                    }
                  }
                  icon={<pure(CheckBoxOutlineBlank) />}
                  inputProps={
                    Object {
                      "data-indeterminate": false,
                    }
                  }
                  onChange={[Function]}
                  type="checkbox"
                >
                  <WithFormControlContext(SwitchBase)
                    checked={true}
                    checkedIcon={<pure(CheckBox) />}
                    className=""
                    classes={
                      Object {
                        "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                        "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                        "input": "MuiPrivateSwitchBase-input-12",
                        "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8",
                      }
                    }
                    icon={<pure(CheckBoxOutlineBlank) />}
                    inputProps={
                      Object {
                        "data-indeterminate": false,
                      }
                    }
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <SwitchBase
                      checked={true}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                          "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                          "input": "MuiPrivateSwitchBase-input-12",
                          "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithStyles(IconButton)
                        className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2"
                        component="span"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        tabIndex={null}
                      >
                        <IconButton
                          className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2"
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit-14",
                              "colorPrimary": "MuiIconButton-colorPrimary-15",
                              "colorSecondary": "MuiIconButton-colorSecondary-16",
                              "disabled": "MuiIconButton-disabled-17",
                              "label": "MuiIconButton-label-18",
                              "root": "MuiIconButton-root-13",
                            }
                          }
                          color="default"
                          component="span"
                          disabled={false}
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <WithStyles(ButtonBase)
                            centerRipple={true}
                            className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2"
                            component="span"
                            disabled={false}
                            focusRipple={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <ButtonBase
                              centerRipple={true}
                              className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2"
                              classes={
                                Object {
                                  "disabled": "MuiButtonBase-disabled-20",
                                  "focusVisible": "MuiButtonBase-focusVisible-21",
                                  "root": "MuiButtonBase-root-19",
                                }
                              }
                              component="span"
                              disableRipple={false}
                              disableTouchRipple={false}
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                              type="button"
                            >
                              <span
                                className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2"
                                onBlur={[Function]}
                                onContextMenu={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={null}
                              >
                                <span
                                  className="MuiIconButton-label-18"
                                >
                                  <pure(CheckBox)>
                                    <CheckBox>
                                      <WithStyles(SvgIcon)>
                                        <SvgIcon
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction-25",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                              "colorError": "MuiSvgIcon-colorError-26",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                              "root": "MuiSvgIcon-root-22",
                                            }
                                          }
                                          color="inherit"
                                          component="svg"
                                          fontSize="default"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="MuiSvgIcon-root-22"
                                            focusable="false"
                                            role="presentation"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"
                                            />
                                          </svg>
                                        </SvgIcon>
                                      </WithStyles(SvgIcon)>
                                    </CheckBox>
                                  </pure(CheckBox)>
                                  <input
                                    checked={true}
                                    className="MuiPrivateSwitchBase-input-12"
                                    data-indeterminate={false}
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                </span>
                                <NoSsr
                                  defer={false}
                                  fallback={null}
                                >
                                  <WithStyles(TouchRipple)
                                    center={true}
                                    innerRef={[Function]}
                                  >
                                    <TouchRipple
                                      center={true}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child-35",
                                          "childLeaving": "MuiTouchRipple-childLeaving-36",
                                          "childPulsate": "MuiTouchRipple-childPulsate-37",
                                          "ripple": "MuiTouchRipple-ripple-32",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-34",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible-33",
                                          "root": "MuiTouchRipple-root-31",
                                        }
                                      }
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        className="MuiTouchRipple-root-31"
                                        component="span"
                                        enter={true}
                                        exit={true}
                                      >
                                        <span
                                          className="MuiTouchRipple-root-31"
                                        />
                                      </TransitionGroup>
                                    </TouchRipple>
                                  </WithStyles(TouchRipple)>
                                </NoSsr>
                              </span>
                            </ButtonBase>
                          </WithStyles(ButtonBase)>
                        </IconButton>
                      </WithStyles(IconButton)>
                    </SwitchBase>
                  </WithFormControlContext(SwitchBase)>
                </WithStyles(WithFormControlContext(SwitchBase))>
              </Checkbox>
            </WithStyles(Checkbox)>
          </div>
          <div>
            translated: tool_card_categories.culture
          </div>
        </div>
        <div
          style={
            Object {
              "alignSelf": "flex-end",
            }
          }
        >
          <Glyphicon
            bsClass="glyphicon"
            glyph="chevron-down"
            onClick={[Function]}
            style={
              Object {
                "fontSize": "18px",
                "margin": "0 12px 0 0",
                "textAlign": "right",
                "width": "20px",
              }
            }
          >
            <span
              className="glyphicon glyphicon-chevron-down"
              onClick={[Function]}
              style={
                Object {
                  "fontSize": "18px",
                  "margin": "0 12px 0 0",
                  "textAlign": "right",
                  "width": "20px",
                }
              }
            />
          </Glyphicon>
        </div>
      </div>
      <div
        key="4"
        style={
          Object {
            "display": "flex",
            "flexWrap": "wrap",
            "margin": "0 0 5 0",
            "width": "100%",
          }
        }
      >
        <div
          style={
            Object {
              "display": "flex",
              "width": "92%",
            }
          }
        >
          <div
            style={
              Object {
                "width": "38px",
              }
            }
          >
            <WithStyles(Checkbox)
              checked={false}
              classes={
                Object {
                  "checked": "ToolCardBoxes-checked-2",
                  "root": "ToolCardBoxes-root-1",
                }
              }
              indeterminate={true}
              onChange={[Function]}
            >
              <Checkbox
                checked={false}
                checkedIcon={<pure(CheckBox) />}
                classes={
                  Object {
                    "checked": "MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                    "colorPrimary": "MuiCheckbox-colorPrimary-7",
                    "colorSecondary": "MuiCheckbox-colorSecondary-8",
                    "disabled": "MuiCheckbox-disabled-5",
                    "indeterminate": "MuiCheckbox-indeterminate-6",
                    "root": "MuiCheckbox-root-3 ToolCardBoxes-root-1",
                  }
                }
                color="secondary"
                icon={<pure(CheckBoxOutlineBlank) />}
                indeterminate={true}
                indeterminateIcon={<pure(IndeterminateCheckBox) />}
                onChange={[Function]}
              >
                <WithStyles(WithFormControlContext(SwitchBase))
                  checked={false}
                  checkedIcon={<pure(IndeterminateCheckBox) />}
                  className="MuiCheckbox-indeterminate-6"
                  classes={
                    Object {
                      "checked": "MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                      "disabled": "MuiCheckbox-disabled-5",
                      "root": "MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8",
                    }
                  }
                  icon={<pure(IndeterminateCheckBox) />}
                  inputProps={
                    Object {
                      "data-indeterminate": true,
                    }
                  }
                  onChange={[Function]}
                  type="checkbox"
                >
                  <WithFormControlContext(SwitchBase)
                    checked={false}
                    checkedIcon={<pure(IndeterminateCheckBox) />}
                    className="MuiCheckbox-indeterminate-6"
                    classes={
                      Object {
                        "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                        "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                        "input": "MuiPrivateSwitchBase-input-12",
                        "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8",
                      }
                    }
                    icon={<pure(IndeterminateCheckBox) />}
                    inputProps={
                      Object {
                        "data-indeterminate": true,
                      }
                    }
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <SwitchBase
                      checked={false}
                      checkedIcon={<pure(IndeterminateCheckBox) />}
                      className="MuiCheckbox-indeterminate-6"
                      classes={
                        Object {
                          "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 ToolCardBoxes-checked-2",
                          "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                          "input": "MuiPrivateSwitchBase-input-12",
                          "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(IndeterminateCheckBox) />}
                      inputProps={
                        Object {
                          "data-indeterminate": true,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithStyles(IconButton)
                        className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiCheckbox-indeterminate-6"
                        component="span"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        tabIndex={null}
                      >
                        <IconButton
                          className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiCheckbox-indeterminate-6"
                          classes={
                            Object {
                              "colorInherit": "MuiIconButton-colorInherit-14",
                              "colorPrimary": "MuiIconButton-colorPrimary-15",
                              "colorSecondary": "MuiIconButton-colorSecondary-16",
                              "disabled": "MuiIconButton-disabled-17",
                              "label": "MuiIconButton-label-18",
                              "root": "MuiIconButton-root-13",
                            }
                          }
                          color="default"
                          component="span"
                          disabled={false}
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <WithStyles(ButtonBase)
                            centerRipple={true}
                            className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiCheckbox-indeterminate-6"
                            component="span"
                            disabled={false}
                            focusRipple={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <ButtonBase
                              centerRipple={true}
                              className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiCheckbox-indeterminate-6"
                              classes={
                                Object {
                                  "disabled": "MuiButtonBase-disabled-20",
                                  "focusVisible": "MuiButtonBase-focusVisible-21",
                                  "root": "MuiButtonBase-root-19",
                                }
                              }
                              component="span"
                              disableRipple={false}
                              disableTouchRipple={false}
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                              type="button"
                            >
                              <span
                                className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 ToolCardBoxes-root-1 MuiCheckbox-colorSecondary-8 MuiCheckbox-indeterminate-6"
                                onBlur={[Function]}
                                onContextMenu={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                onMouseDown={[Function]}
                                onMouseLeave={[Function]}
                                onMouseUp={[Function]}
                                onTouchEnd={[Function]}
                                onTouchMove={[Function]}
                                onTouchStart={[Function]}
                                tabIndex={null}
                              >
                                <span
                                  className="MuiIconButton-label-18"
                                >
                                  <pure(IndeterminateCheckBox)>
                                    <IndeterminateCheckBox>
                                      <WithStyles(SvgIcon)>
                                        <SvgIcon
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction-25",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                              "colorError": "MuiSvgIcon-colorError-26",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                              "root": "MuiSvgIcon-root-22",
                                            }
                                          }
                                          color="inherit"
                                          component="svg"
                                          fontSize="default"
                                          viewBox="0 0 24 24"
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className="MuiSvgIcon-root-22"
                                            focusable="false"
                                            role="presentation"
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z"
                                            />
                                          </svg>
                                        </SvgIcon>
                                      </WithStyles(SvgIcon)>
                                    </IndeterminateCheckBox>
                                  </pure(IndeterminateCheckBox)>
                                  <input
                                    checked={false}
                                    className="MuiPrivateSwitchBase-input-12"
                                    data-indeterminate={true}
                                    onChange={[Function]}
                                    type="checkbox"
                                  />
                                </span>
                                <NoSsr
                                  defer={false}
                                  fallback={null}
                                >
                                  <WithStyles(TouchRipple)
                                    center={true}
                                    innerRef={[Function]}
                                  >
                                    <TouchRipple
                                      center={true}
                                      classes={
                                        Object {
                                          "child": "MuiTouchRipple-child-35",
                                          "childLeaving": "MuiTouchRipple-childLeaving-36",
                                          "childPulsate": "MuiTouchRipple-childPulsate-37",
                                          "ripple": "MuiTouchRipple-ripple-32",
                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate-34",
                                          "rippleVisible": "MuiTouchRipple-rippleVisible-33",
                                          "root": "MuiTouchRipple-root-31",
                                        }
                                      }
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        className="MuiTouchRipple-root-31"
                                        component="span"
                                        enter={true}
                                        exit={true}
                                      >
                                        <span
                                          className="MuiTouchRipple-root-31"
                                        />
                                      </TransitionGroup>
                                    </TouchRipple>
                                  </WithStyles(TouchRipple)>
                                </NoSsr>
                              </span>
                            </ButtonBase>
                          </WithStyles(ButtonBase)>
                        </IconButton>
                      </WithStyles(IconButton)>
                    </SwitchBase>
                  </WithFormControlContext(SwitchBase)>
                </WithStyles(WithFormControlContext(SwitchBase))>
              </Checkbox>
            </WithStyles(Checkbox)>
          </div>
          <div>
            translated: tool_card_categories.grammar
          </div>
        </div>
        <div
          style={
            Object {
              "alignSelf": "flex-end",
            }
          }
        >
          <Glyphicon
            bsClass="glyphicon"
            glyph="chevron-down"
            onClick={[Function]}
            style={
              Object {
                "fontSize": "18px",
                "margin": "0 12px 0 0",
                "textAlign": "right",
                "width": "20px",
              }
            }
          >
            <span
              className="glyphicon glyphicon-chevron-down"
              onClick={[Function]}
              style={
                Object {
                  "fontSize": "18px",
                  "margin": "0 12px 0 0",
                  "textAlign": "right",
                  "width": "20px",
                }
              }
            />
          </Glyphicon>
        </div>
      </div>
    </div>
  </ToolCardBoxes>
</WithStyles(ToolCardBoxes)>
`;

exports[`translationWords should have three boxes unchecked 1`] = `
<div
  style={
    Object {
      "margin": "0 2% 0 6%",
    }
  }
/>
`;
