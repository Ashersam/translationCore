// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`translationNotes should have 4 boxes checked 1`] = `
<ToolCardBoxes
  availableCategories={
    Object {
      "culture": Array [
        "figs-explicit",
      ],
      "discourse": Array [
        "writing-background",
        "writing-endofstory",
      ],
      "figures": Array [
        "figs-idiom",
        "figs-irony",
        "figs-metaphor",
        "figs-rquestion",
        "figs-simile",
        "figs-apostrophe",
        "figs-euphemism",
      ],
      "grammar": Array [
        "figs-hypo",
        "figs-activepassive",
        "figs-gendernotations",
        "figs-pronouns",
        "figs-you",
        "figs-123person",
        "figs-abstractnouns",
        "figs-distinguish",
      ],
      "numbers": Array [
        "translate-numbers",
        "translate-fraction",
      ],
    }
  }
  bookId="tit"
  checks={
    Array [
      "figs-gendernotations",
      "figs-pronouns",
      "figs-irony",
    ]
  }
  onChecked={[Function]}
  selectedCategories={
    Array [
      "writing-background",
      "translate-numbers",
      "translate-fraction",
      "figs-idiom",
      "figs-irony",
      "figs-metaphor",
      "figs-rquestion",
      "figs-simile",
      "figs-apostrophe",
      "figs-explicit",
      "figs-hypo",
      "figs-activepassive",
      "figs-pronouns",
      "figs-you",
      "figs-123person",
      "figs-abstractnouns",
    ]
  }
  selectedGL="en"
  showPopover={[Function]}
  toolName="translationNotes"
  translate={[Function]}
>
  <div
    style={
      Object {
        "margin": "0 2% 0 6%",
      }
    }
  >
    <div
      key="0"
      style={
        Object {
          "display": "flex",
          "flexWrap": "wrap",
          "margin": "0 0 5 0",
          "width": "100%",
        }
      }
    >
      <div
        style={
          Object {
            "display": "flex",
            "width": "92%",
          }
        }
      >
        <div
          style={
            Object {
              "width": "38px",
            }
          }
        >
          <WithStyles(CategoryCheckbox)
            availableSubcategories={
              Array [
                "writing-background",
                "writing-endofstory",
              ]
            }
            selectedCategories={
              Array [
                "writing-background",
                "translate-numbers",
                "translate-fraction",
                "figs-idiom",
                "figs-irony",
                "figs-metaphor",
                "figs-rquestion",
                "figs-simile",
                "figs-apostrophe",
                "figs-explicit",
                "figs-hypo",
                "figs-activepassive",
                "figs-pronouns",
                "figs-you",
                "figs-123person",
                "figs-abstractnouns",
              ]
            }
            toolName="translationNotes"
          >
            <CategoryCheckbox
              availableSubcategories={
                Array [
                  "writing-background",
                  "writing-endofstory",
                ]
              }
              classes={
                Object {
                  "checked": "CategoryCheckbox-checked-2",
                  "root": "CategoryCheckbox-root-1",
                }
              }
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              toolName="translationNotes"
            >
              <WithStyles(Checkbox)
                checked={false}
                classes={
                  Object {
                    "checked": "CategoryCheckbox-checked-2",
                    "root": "CategoryCheckbox-root-1",
                  }
                }
                indeterminate={false}
                onChange={[Function]}
              >
                <Checkbox
                  checked={false}
                  checkedIcon={<pure(CheckBox) />}
                  classes={
                    Object {
                      "checked": "MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                      "colorPrimary": "MuiCheckbox-colorPrimary-7",
                      "colorSecondary": "MuiCheckbox-colorSecondary-8",
                      "disabled": "MuiCheckbox-disabled-5",
                      "indeterminate": "MuiCheckbox-indeterminate-6",
                      "root": "MuiCheckbox-root-3 CategoryCheckbox-root-1",
                    }
                  }
                  color="secondary"
                  icon={<pure(CheckBoxOutlineBlank) />}
                  indeterminate={false}
                  indeterminateIcon={<pure(IndeterminateCheckBox) />}
                  onChange={[Function]}
                >
                  <WithStyles(WithFormControlContext(SwitchBase))
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    className=""
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                        "disabled": "MuiCheckbox-disabled-5",
                        "root": "MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8",
                      }
                    }
                    icon={<pure(CheckBoxOutlineBlank) />}
                    inputProps={
                      Object {
                        "data-indeterminate": false,
                      }
                    }
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <WithFormControlContext(SwitchBase)
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                          "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                          "input": "MuiPrivateSwitchBase-input-12",
                          "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <SwitchBase
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <WithStyles(IconButton)
                          className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                          component="span"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <IconButton
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                            classes={
                              Object {
                                "colorInherit": "MuiIconButton-colorInherit-14",
                                "colorPrimary": "MuiIconButton-colorPrimary-15",
                                "colorSecondary": "MuiIconButton-colorSecondary-16",
                                "disabled": "MuiIconButton-disabled-17",
                                "label": "MuiIconButton-label-18",
                                "root": "MuiIconButton-root-13",
                              }
                            }
                            color="default"
                            component="span"
                            disabled={false}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <WithStyles(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                              component="span"
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ButtonBase
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                                classes={
                                  Object {
                                    "disabled": "MuiButtonBase-disabled-20",
                                    "focusVisible": "MuiButtonBase-focusVisible-21",
                                    "root": "MuiButtonBase-root-19",
                                  }
                                }
                                component="span"
                                disableRipple={false}
                                disableTouchRipple={false}
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                                type="button"
                              >
                                <span
                                  className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                                  onBlur={[Function]}
                                  onContextMenu={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={null}
                                >
                                  <span
                                    className="MuiIconButton-label-18"
                                  >
                                    <pure(CheckBoxOutlineBlank)>
                                      <CheckBoxOutlineBlank>
                                        <WithStyles(SvgIcon)>
                                          <SvgIcon
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction-25",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                "colorError": "MuiSvgIcon-colorError-26",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                "root": "MuiSvgIcon-root-22",
                                              }
                                            }
                                            color="inherit"
                                            component="svg"
                                            fontSize="default"
                                            viewBox="0 0 24 24"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root-22"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </SvgIcon>
                                        </WithStyles(SvgIcon)>
                                      </CheckBoxOutlineBlank>
                                    </pure(CheckBoxOutlineBlank)>
                                    <input
                                      checked={false}
                                      className="MuiPrivateSwitchBase-input-12"
                                      data-indeterminate={false}
                                      onChange={[Function]}
                                      type="checkbox"
                                    />
                                  </span>
                                  <NoSsr
                                    defer={false}
                                    fallback={null}
                                  >
                                    <WithStyles(TouchRipple)
                                      center={true}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={true}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child-35",
                                            "childLeaving": "MuiTouchRipple-childLeaving-36",
                                            "childPulsate": "MuiTouchRipple-childPulsate-37",
                                            "ripple": "MuiTouchRipple-ripple-32",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate-34",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-33",
                                            "root": "MuiTouchRipple-root-31",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-31"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-31"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </WithStyles(TouchRipple)>
                                  </NoSsr>
                                </span>
                              </ButtonBase>
                            </WithStyles(ButtonBase)>
                          </IconButton>
                        </WithStyles(IconButton)>
                      </SwitchBase>
                    </WithFormControlContext(SwitchBase)>
                  </WithStyles(WithFormControlContext(SwitchBase))>
                </Checkbox>
              </WithStyles(Checkbox)>
            </CategoryCheckbox>
          </WithStyles(CategoryCheckbox)>
        </div>
        <div>
          translated: tool_card_categories.discourse
        </div>
      </div>
      <div
        style={
          Object {
            "alignSelf": "flex-end",
          }
        }
      >
        <Glyphicon
          bsClass="glyphicon"
          glyph="chevron-up"
          onClick={[Function]}
          style={
            Object {
              "fontSize": "18px",
              "margin": "0 12px 0 0",
              "textAlign": "right",
              "width": "20px",
            }
          }
        >
          <span
            className="glyphicon glyphicon-chevron-up"
            onClick={[Function]}
            style={
              Object {
                "fontSize": "18px",
                "margin": "0 12px 0 0",
                "textAlign": "right",
                "width": "20px",
              }
            }
          />
        </Glyphicon>
      </div>
      <div
        key="0"
        style={
          Object {
            "alignItems": "left",
            "display": "flex",
            "flexWrap": "wrap",
            "marginBottom": 5,
            "width": "100%",
          }
        }
      >
        <div
          key="0"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="writing-background"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="writing-background"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-right"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-right hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
        <div
          key="1"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="writing-endofstory"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="writing-endofstory"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-left"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-left hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
      </div>
    </div>
    <div
      key="1"
      style={
        Object {
          "display": "flex",
          "flexWrap": "wrap",
          "margin": "0 0 5 0",
          "width": "100%",
        }
      }
    >
      <div
        style={
          Object {
            "display": "flex",
            "width": "92%",
          }
        }
      >
        <div
          style={
            Object {
              "width": "38px",
            }
          }
        >
          <WithStyles(CategoryCheckbox)
            availableSubcategories={
              Array [
                "translate-numbers",
                "translate-fraction",
              ]
            }
            selectedCategories={
              Array [
                "writing-background",
                "translate-numbers",
                "translate-fraction",
                "figs-idiom",
                "figs-irony",
                "figs-metaphor",
                "figs-rquestion",
                "figs-simile",
                "figs-apostrophe",
                "figs-explicit",
                "figs-hypo",
                "figs-activepassive",
                "figs-pronouns",
                "figs-you",
                "figs-123person",
                "figs-abstractnouns",
              ]
            }
            toolName="translationNotes"
          >
            <CategoryCheckbox
              availableSubcategories={
                Array [
                  "translate-numbers",
                  "translate-fraction",
                ]
              }
              classes={
                Object {
                  "checked": "CategoryCheckbox-checked-2",
                  "root": "CategoryCheckbox-root-1",
                }
              }
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              toolName="translationNotes"
            >
              <WithStyles(Checkbox)
                checked={false}
                classes={
                  Object {
                    "checked": "CategoryCheckbox-checked-2",
                    "root": "CategoryCheckbox-root-1",
                  }
                }
                indeterminate={false}
                onChange={[Function]}
              >
                <Checkbox
                  checked={false}
                  checkedIcon={<pure(CheckBox) />}
                  classes={
                    Object {
                      "checked": "MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                      "colorPrimary": "MuiCheckbox-colorPrimary-7",
                      "colorSecondary": "MuiCheckbox-colorSecondary-8",
                      "disabled": "MuiCheckbox-disabled-5",
                      "indeterminate": "MuiCheckbox-indeterminate-6",
                      "root": "MuiCheckbox-root-3 CategoryCheckbox-root-1",
                    }
                  }
                  color="secondary"
                  icon={<pure(CheckBoxOutlineBlank) />}
                  indeterminate={false}
                  indeterminateIcon={<pure(IndeterminateCheckBox) />}
                  onChange={[Function]}
                >
                  <WithStyles(WithFormControlContext(SwitchBase))
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    className=""
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                        "disabled": "MuiCheckbox-disabled-5",
                        "root": "MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8",
                      }
                    }
                    icon={<pure(CheckBoxOutlineBlank) />}
                    inputProps={
                      Object {
                        "data-indeterminate": false,
                      }
                    }
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <WithFormControlContext(SwitchBase)
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                          "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                          "input": "MuiPrivateSwitchBase-input-12",
                          "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <SwitchBase
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <WithStyles(IconButton)
                          className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                          component="span"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <IconButton
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                            classes={
                              Object {
                                "colorInherit": "MuiIconButton-colorInherit-14",
                                "colorPrimary": "MuiIconButton-colorPrimary-15",
                                "colorSecondary": "MuiIconButton-colorSecondary-16",
                                "disabled": "MuiIconButton-disabled-17",
                                "label": "MuiIconButton-label-18",
                                "root": "MuiIconButton-root-13",
                              }
                            }
                            color="default"
                            component="span"
                            disabled={false}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <WithStyles(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                              component="span"
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ButtonBase
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                                classes={
                                  Object {
                                    "disabled": "MuiButtonBase-disabled-20",
                                    "focusVisible": "MuiButtonBase-focusVisible-21",
                                    "root": "MuiButtonBase-root-19",
                                  }
                                }
                                component="span"
                                disableRipple={false}
                                disableTouchRipple={false}
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                                type="button"
                              >
                                <span
                                  className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                                  onBlur={[Function]}
                                  onContextMenu={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={null}
                                >
                                  <span
                                    className="MuiIconButton-label-18"
                                  >
                                    <pure(CheckBoxOutlineBlank)>
                                      <CheckBoxOutlineBlank>
                                        <WithStyles(SvgIcon)>
                                          <SvgIcon
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction-25",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                "colorError": "MuiSvgIcon-colorError-26",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                "root": "MuiSvgIcon-root-22",
                                              }
                                            }
                                            color="inherit"
                                            component="svg"
                                            fontSize="default"
                                            viewBox="0 0 24 24"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root-22"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </SvgIcon>
                                        </WithStyles(SvgIcon)>
                                      </CheckBoxOutlineBlank>
                                    </pure(CheckBoxOutlineBlank)>
                                    <input
                                      checked={false}
                                      className="MuiPrivateSwitchBase-input-12"
                                      data-indeterminate={false}
                                      onChange={[Function]}
                                      type="checkbox"
                                    />
                                  </span>
                                  <NoSsr
                                    defer={false}
                                    fallback={null}
                                  >
                                    <WithStyles(TouchRipple)
                                      center={true}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={true}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child-35",
                                            "childLeaving": "MuiTouchRipple-childLeaving-36",
                                            "childPulsate": "MuiTouchRipple-childPulsate-37",
                                            "ripple": "MuiTouchRipple-ripple-32",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate-34",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-33",
                                            "root": "MuiTouchRipple-root-31",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-31"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-31"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </WithStyles(TouchRipple)>
                                  </NoSsr>
                                </span>
                              </ButtonBase>
                            </WithStyles(ButtonBase)>
                          </IconButton>
                        </WithStyles(IconButton)>
                      </SwitchBase>
                    </WithFormControlContext(SwitchBase)>
                  </WithStyles(WithFormControlContext(SwitchBase))>
                </Checkbox>
              </WithStyles(Checkbox)>
            </CategoryCheckbox>
          </WithStyles(CategoryCheckbox)>
        </div>
        <div>
          translated: tool_card_categories.numbers
        </div>
      </div>
      <div
        style={
          Object {
            "alignSelf": "flex-end",
          }
        }
      >
        <Glyphicon
          bsClass="glyphicon"
          glyph="chevron-up"
          onClick={[Function]}
          style={
            Object {
              "fontSize": "18px",
              "margin": "0 12px 0 0",
              "textAlign": "right",
              "width": "20px",
            }
          }
        >
          <span
            className="glyphicon glyphicon-chevron-up"
            onClick={[Function]}
            style={
              Object {
                "fontSize": "18px",
                "margin": "0 12px 0 0",
                "textAlign": "right",
                "width": "20px",
              }
            }
          />
        </Glyphicon>
      </div>
      <div
        key="1"
        style={
          Object {
            "alignItems": "left",
            "display": "flex",
            "flexWrap": "wrap",
            "marginBottom": 5,
            "width": "100%",
          }
        }
      >
        <div
          key="0"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="translate-numbers"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="translate-numbers"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-right"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-right hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
        <div
          key="1"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="translate-fraction"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="translate-fraction"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-left"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-left hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
      </div>
    </div>
    <div
      key="2"
      style={
        Object {
          "display": "flex",
          "flexWrap": "wrap",
          "margin": "0 0 5 0",
          "width": "100%",
        }
      }
    >
      <div
        style={
          Object {
            "display": "flex",
            "width": "92%",
          }
        }
      >
        <div
          style={
            Object {
              "width": "38px",
            }
          }
        >
          <WithStyles(CategoryCheckbox)
            availableSubcategories={
              Array [
                "figs-idiom",
                "figs-irony",
                "figs-metaphor",
                "figs-rquestion",
                "figs-simile",
                "figs-apostrophe",
                "figs-euphemism",
              ]
            }
            selectedCategories={
              Array [
                "writing-background",
                "translate-numbers",
                "translate-fraction",
                "figs-idiom",
                "figs-irony",
                "figs-metaphor",
                "figs-rquestion",
                "figs-simile",
                "figs-apostrophe",
                "figs-explicit",
                "figs-hypo",
                "figs-activepassive",
                "figs-pronouns",
                "figs-you",
                "figs-123person",
                "figs-abstractnouns",
              ]
            }
            toolName="translationNotes"
          >
            <CategoryCheckbox
              availableSubcategories={
                Array [
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-euphemism",
                ]
              }
              classes={
                Object {
                  "checked": "CategoryCheckbox-checked-2",
                  "root": "CategoryCheckbox-root-1",
                }
              }
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              toolName="translationNotes"
            >
              <WithStyles(Checkbox)
                checked={false}
                classes={
                  Object {
                    "checked": "CategoryCheckbox-checked-2",
                    "root": "CategoryCheckbox-root-1",
                  }
                }
                indeterminate={false}
                onChange={[Function]}
              >
                <Checkbox
                  checked={false}
                  checkedIcon={<pure(CheckBox) />}
                  classes={
                    Object {
                      "checked": "MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                      "colorPrimary": "MuiCheckbox-colorPrimary-7",
                      "colorSecondary": "MuiCheckbox-colorSecondary-8",
                      "disabled": "MuiCheckbox-disabled-5",
                      "indeterminate": "MuiCheckbox-indeterminate-6",
                      "root": "MuiCheckbox-root-3 CategoryCheckbox-root-1",
                    }
                  }
                  color="secondary"
                  icon={<pure(CheckBoxOutlineBlank) />}
                  indeterminate={false}
                  indeterminateIcon={<pure(IndeterminateCheckBox) />}
                  onChange={[Function]}
                >
                  <WithStyles(WithFormControlContext(SwitchBase))
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    className=""
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                        "disabled": "MuiCheckbox-disabled-5",
                        "root": "MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8",
                      }
                    }
                    icon={<pure(CheckBoxOutlineBlank) />}
                    inputProps={
                      Object {
                        "data-indeterminate": false,
                      }
                    }
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <WithFormControlContext(SwitchBase)
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                          "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                          "input": "MuiPrivateSwitchBase-input-12",
                          "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <SwitchBase
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <WithStyles(IconButton)
                          className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                          component="span"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <IconButton
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                            classes={
                              Object {
                                "colorInherit": "MuiIconButton-colorInherit-14",
                                "colorPrimary": "MuiIconButton-colorPrimary-15",
                                "colorSecondary": "MuiIconButton-colorSecondary-16",
                                "disabled": "MuiIconButton-disabled-17",
                                "label": "MuiIconButton-label-18",
                                "root": "MuiIconButton-root-13",
                              }
                            }
                            color="default"
                            component="span"
                            disabled={false}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <WithStyles(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                              component="span"
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ButtonBase
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                                classes={
                                  Object {
                                    "disabled": "MuiButtonBase-disabled-20",
                                    "focusVisible": "MuiButtonBase-focusVisible-21",
                                    "root": "MuiButtonBase-root-19",
                                  }
                                }
                                component="span"
                                disableRipple={false}
                                disableTouchRipple={false}
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                                type="button"
                              >
                                <span
                                  className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                                  onBlur={[Function]}
                                  onContextMenu={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={null}
                                >
                                  <span
                                    className="MuiIconButton-label-18"
                                  >
                                    <pure(CheckBoxOutlineBlank)>
                                      <CheckBoxOutlineBlank>
                                        <WithStyles(SvgIcon)>
                                          <SvgIcon
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction-25",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                "colorError": "MuiSvgIcon-colorError-26",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                "root": "MuiSvgIcon-root-22",
                                              }
                                            }
                                            color="inherit"
                                            component="svg"
                                            fontSize="default"
                                            viewBox="0 0 24 24"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root-22"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </SvgIcon>
                                        </WithStyles(SvgIcon)>
                                      </CheckBoxOutlineBlank>
                                    </pure(CheckBoxOutlineBlank)>
                                    <input
                                      checked={false}
                                      className="MuiPrivateSwitchBase-input-12"
                                      data-indeterminate={false}
                                      onChange={[Function]}
                                      type="checkbox"
                                    />
                                  </span>
                                  <NoSsr
                                    defer={false}
                                    fallback={null}
                                  >
                                    <WithStyles(TouchRipple)
                                      center={true}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={true}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child-35",
                                            "childLeaving": "MuiTouchRipple-childLeaving-36",
                                            "childPulsate": "MuiTouchRipple-childPulsate-37",
                                            "ripple": "MuiTouchRipple-ripple-32",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate-34",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-33",
                                            "root": "MuiTouchRipple-root-31",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-31"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-31"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </WithStyles(TouchRipple)>
                                  </NoSsr>
                                </span>
                              </ButtonBase>
                            </WithStyles(ButtonBase)>
                          </IconButton>
                        </WithStyles(IconButton)>
                      </SwitchBase>
                    </WithFormControlContext(SwitchBase)>
                  </WithStyles(WithFormControlContext(SwitchBase))>
                </Checkbox>
              </WithStyles(Checkbox)>
            </CategoryCheckbox>
          </WithStyles(CategoryCheckbox)>
        </div>
        <div>
          translated: tool_card_categories.figures
        </div>
      </div>
      <div
        style={
          Object {
            "alignSelf": "flex-end",
          }
        }
      >
        <Glyphicon
          bsClass="glyphicon"
          glyph="chevron-up"
          onClick={[Function]}
          style={
            Object {
              "fontSize": "18px",
              "margin": "0 12px 0 0",
              "textAlign": "right",
              "width": "20px",
            }
          }
        >
          <span
            className="glyphicon glyphicon-chevron-up"
            onClick={[Function]}
            style={
              Object {
                "fontSize": "18px",
                "margin": "0 12px 0 0",
                "textAlign": "right",
                "width": "20px",
              }
            }
          />
        </Glyphicon>
      </div>
      <div
        key="2"
        style={
          Object {
            "alignItems": "left",
            "display": "flex",
            "flexWrap": "wrap",
            "marginBottom": 5,
            "width": "100%",
          }
        }
      >
        <div
          key="0"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="figs-idiom"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="figs-idiom"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-right"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-right hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
        <div
          key="1"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="figs-irony"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="figs-irony"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-left"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-left hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
        <div
          key="2"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="figs-metaphor"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="figs-metaphor"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-right"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-right hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
        <div
          key="3"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="figs-rquestion"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="figs-rquestion"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-left"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-left hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
        <div
          key="4"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="figs-simile"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="figs-simile"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-right"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-right hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
        <div
          key="5"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="figs-apostrophe"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="figs-apostrophe"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-left"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-left hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
        <div
          key="6"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="figs-euphemism"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="figs-euphemism"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-right"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-right hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
      </div>
    </div>
    <div
      key="3"
      style={
        Object {
          "display": "flex",
          "flexWrap": "wrap",
          "margin": "0 0 5 0",
          "width": "100%",
        }
      }
    >
      <div
        style={
          Object {
            "display": "flex",
            "width": "92%",
          }
        }
      >
        <div
          style={
            Object {
              "width": "38px",
            }
          }
        >
          <WithStyles(CategoryCheckbox)
            availableSubcategories={
              Array [
                "figs-explicit",
              ]
            }
            selectedCategories={
              Array [
                "writing-background",
                "translate-numbers",
                "translate-fraction",
                "figs-idiom",
                "figs-irony",
                "figs-metaphor",
                "figs-rquestion",
                "figs-simile",
                "figs-apostrophe",
                "figs-explicit",
                "figs-hypo",
                "figs-activepassive",
                "figs-pronouns",
                "figs-you",
                "figs-123person",
                "figs-abstractnouns",
              ]
            }
            toolName="translationNotes"
          >
            <CategoryCheckbox
              availableSubcategories={
                Array [
                  "figs-explicit",
                ]
              }
              classes={
                Object {
                  "checked": "CategoryCheckbox-checked-2",
                  "root": "CategoryCheckbox-root-1",
                }
              }
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              toolName="translationNotes"
            >
              <WithStyles(Checkbox)
                checked={false}
                classes={
                  Object {
                    "checked": "CategoryCheckbox-checked-2",
                    "root": "CategoryCheckbox-root-1",
                  }
                }
                indeterminate={false}
                onChange={[Function]}
              >
                <Checkbox
                  checked={false}
                  checkedIcon={<pure(CheckBox) />}
                  classes={
                    Object {
                      "checked": "MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                      "colorPrimary": "MuiCheckbox-colorPrimary-7",
                      "colorSecondary": "MuiCheckbox-colorSecondary-8",
                      "disabled": "MuiCheckbox-disabled-5",
                      "indeterminate": "MuiCheckbox-indeterminate-6",
                      "root": "MuiCheckbox-root-3 CategoryCheckbox-root-1",
                    }
                  }
                  color="secondary"
                  icon={<pure(CheckBoxOutlineBlank) />}
                  indeterminate={false}
                  indeterminateIcon={<pure(IndeterminateCheckBox) />}
                  onChange={[Function]}
                >
                  <WithStyles(WithFormControlContext(SwitchBase))
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    className=""
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                        "disabled": "MuiCheckbox-disabled-5",
                        "root": "MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8",
                      }
                    }
                    icon={<pure(CheckBoxOutlineBlank) />}
                    inputProps={
                      Object {
                        "data-indeterminate": false,
                      }
                    }
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <WithFormControlContext(SwitchBase)
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                          "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                          "input": "MuiPrivateSwitchBase-input-12",
                          "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <SwitchBase
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <WithStyles(IconButton)
                          className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                          component="span"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <IconButton
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                            classes={
                              Object {
                                "colorInherit": "MuiIconButton-colorInherit-14",
                                "colorPrimary": "MuiIconButton-colorPrimary-15",
                                "colorSecondary": "MuiIconButton-colorSecondary-16",
                                "disabled": "MuiIconButton-disabled-17",
                                "label": "MuiIconButton-label-18",
                                "root": "MuiIconButton-root-13",
                              }
                            }
                            color="default"
                            component="span"
                            disabled={false}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <WithStyles(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                              component="span"
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ButtonBase
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                                classes={
                                  Object {
                                    "disabled": "MuiButtonBase-disabled-20",
                                    "focusVisible": "MuiButtonBase-focusVisible-21",
                                    "root": "MuiButtonBase-root-19",
                                  }
                                }
                                component="span"
                                disableRipple={false}
                                disableTouchRipple={false}
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                                type="button"
                              >
                                <span
                                  className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                                  onBlur={[Function]}
                                  onContextMenu={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={null}
                                >
                                  <span
                                    className="MuiIconButton-label-18"
                                  >
                                    <pure(CheckBoxOutlineBlank)>
                                      <CheckBoxOutlineBlank>
                                        <WithStyles(SvgIcon)>
                                          <SvgIcon
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction-25",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                "colorError": "MuiSvgIcon-colorError-26",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                "root": "MuiSvgIcon-root-22",
                                              }
                                            }
                                            color="inherit"
                                            component="svg"
                                            fontSize="default"
                                            viewBox="0 0 24 24"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root-22"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </SvgIcon>
                                        </WithStyles(SvgIcon)>
                                      </CheckBoxOutlineBlank>
                                    </pure(CheckBoxOutlineBlank)>
                                    <input
                                      checked={false}
                                      className="MuiPrivateSwitchBase-input-12"
                                      data-indeterminate={false}
                                      onChange={[Function]}
                                      type="checkbox"
                                    />
                                  </span>
                                  <NoSsr
                                    defer={false}
                                    fallback={null}
                                  >
                                    <WithStyles(TouchRipple)
                                      center={true}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={true}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child-35",
                                            "childLeaving": "MuiTouchRipple-childLeaving-36",
                                            "childPulsate": "MuiTouchRipple-childPulsate-37",
                                            "ripple": "MuiTouchRipple-ripple-32",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate-34",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-33",
                                            "root": "MuiTouchRipple-root-31",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-31"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-31"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </WithStyles(TouchRipple)>
                                  </NoSsr>
                                </span>
                              </ButtonBase>
                            </WithStyles(ButtonBase)>
                          </IconButton>
                        </WithStyles(IconButton)>
                      </SwitchBase>
                    </WithFormControlContext(SwitchBase)>
                  </WithStyles(WithFormControlContext(SwitchBase))>
                </Checkbox>
              </WithStyles(Checkbox)>
            </CategoryCheckbox>
          </WithStyles(CategoryCheckbox)>
        </div>
        <div>
          translated: tool_card_categories.culture
        </div>
      </div>
      <div
        style={
          Object {
            "alignSelf": "flex-end",
          }
        }
      >
        <Glyphicon
          bsClass="glyphicon"
          glyph="chevron-down"
          onClick={[Function]}
          style={
            Object {
              "fontSize": "18px",
              "margin": "0 12px 0 0",
              "textAlign": "right",
              "width": "20px",
            }
          }
        >
          <span
            className="glyphicon glyphicon-chevron-down"
            onClick={[Function]}
            style={
              Object {
                "fontSize": "18px",
                "margin": "0 12px 0 0",
                "textAlign": "right",
                "width": "20px",
              }
            }
          />
        </Glyphicon>
      </div>
    </div>
    <div
      key="4"
      style={
        Object {
          "display": "flex",
          "flexWrap": "wrap",
          "margin": "0 0 5 0",
          "width": "100%",
        }
      }
    >
      <div
        style={
          Object {
            "display": "flex",
            "width": "92%",
          }
        }
      >
        <div
          style={
            Object {
              "width": "38px",
            }
          }
        >
          <WithStyles(CategoryCheckbox)
            availableSubcategories={
              Array [
                "figs-hypo",
                "figs-activepassive",
                "figs-gendernotations",
                "figs-pronouns",
                "figs-you",
                "figs-123person",
                "figs-abstractnouns",
                "figs-distinguish",
              ]
            }
            selectedCategories={
              Array [
                "writing-background",
                "translate-numbers",
                "translate-fraction",
                "figs-idiom",
                "figs-irony",
                "figs-metaphor",
                "figs-rquestion",
                "figs-simile",
                "figs-apostrophe",
                "figs-explicit",
                "figs-hypo",
                "figs-activepassive",
                "figs-pronouns",
                "figs-you",
                "figs-123person",
                "figs-abstractnouns",
              ]
            }
            toolName="translationNotes"
          >
            <CategoryCheckbox
              availableSubcategories={
                Array [
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-gendernotations",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                  "figs-distinguish",
                ]
              }
              classes={
                Object {
                  "checked": "CategoryCheckbox-checked-2",
                  "root": "CategoryCheckbox-root-1",
                }
              }
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              toolName="translationNotes"
            >
              <WithStyles(Checkbox)
                checked={false}
                classes={
                  Object {
                    "checked": "CategoryCheckbox-checked-2",
                    "root": "CategoryCheckbox-root-1",
                  }
                }
                indeterminate={false}
                onChange={[Function]}
              >
                <Checkbox
                  checked={false}
                  checkedIcon={<pure(CheckBox) />}
                  classes={
                    Object {
                      "checked": "MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                      "colorPrimary": "MuiCheckbox-colorPrimary-7",
                      "colorSecondary": "MuiCheckbox-colorSecondary-8",
                      "disabled": "MuiCheckbox-disabled-5",
                      "indeterminate": "MuiCheckbox-indeterminate-6",
                      "root": "MuiCheckbox-root-3 CategoryCheckbox-root-1",
                    }
                  }
                  color="secondary"
                  icon={<pure(CheckBoxOutlineBlank) />}
                  indeterminate={false}
                  indeterminateIcon={<pure(IndeterminateCheckBox) />}
                  onChange={[Function]}
                >
                  <WithStyles(WithFormControlContext(SwitchBase))
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    className=""
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                        "disabled": "MuiCheckbox-disabled-5",
                        "root": "MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8",
                      }
                    }
                    icon={<pure(CheckBoxOutlineBlank) />}
                    inputProps={
                      Object {
                        "data-indeterminate": false,
                      }
                    }
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <WithFormControlContext(SwitchBase)
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                          "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                          "input": "MuiPrivateSwitchBase-input-12",
                          "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <SwitchBase
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 CategoryCheckbox-checked-2",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <WithStyles(IconButton)
                          className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                          component="span"
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <IconButton
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                            classes={
                              Object {
                                "colorInherit": "MuiIconButton-colorInherit-14",
                                "colorPrimary": "MuiIconButton-colorPrimary-15",
                                "colorSecondary": "MuiIconButton-colorSecondary-16",
                                "disabled": "MuiIconButton-disabled-17",
                                "label": "MuiIconButton-label-18",
                                "root": "MuiIconButton-root-13",
                              }
                            }
                            color="default"
                            component="span"
                            disabled={false}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <WithStyles(ButtonBase)
                              centerRipple={true}
                              className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                              component="span"
                              disabled={false}
                              focusRipple={true}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <ButtonBase
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                                classes={
                                  Object {
                                    "disabled": "MuiButtonBase-disabled-20",
                                    "focusVisible": "MuiButtonBase-focusVisible-21",
                                    "root": "MuiButtonBase-root-19",
                                  }
                                }
                                component="span"
                                disableRipple={false}
                                disableTouchRipple={false}
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                                type="button"
                              >
                                <span
                                  className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 CategoryCheckbox-root-1 MuiCheckbox-colorSecondary-8"
                                  onBlur={[Function]}
                                  onContextMenu={[Function]}
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  onKeyUp={[Function]}
                                  onMouseDown={[Function]}
                                  onMouseLeave={[Function]}
                                  onMouseUp={[Function]}
                                  onTouchEnd={[Function]}
                                  onTouchMove={[Function]}
                                  onTouchStart={[Function]}
                                  tabIndex={null}
                                >
                                  <span
                                    className="MuiIconButton-label-18"
                                  >
                                    <pure(CheckBoxOutlineBlank)>
                                      <CheckBoxOutlineBlank>
                                        <WithStyles(SvgIcon)>
                                          <SvgIcon
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction-25",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                "colorError": "MuiSvgIcon-colorError-26",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                "root": "MuiSvgIcon-root-22",
                                              }
                                            }
                                            color="inherit"
                                            component="svg"
                                            fontSize="default"
                                            viewBox="0 0 24 24"
                                          >
                                            <svg
                                              aria-hidden="true"
                                              className="MuiSvgIcon-root-22"
                                              focusable="false"
                                              role="presentation"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                              />
                                            </svg>
                                          </SvgIcon>
                                        </WithStyles(SvgIcon)>
                                      </CheckBoxOutlineBlank>
                                    </pure(CheckBoxOutlineBlank)>
                                    <input
                                      checked={false}
                                      className="MuiPrivateSwitchBase-input-12"
                                      data-indeterminate={false}
                                      onChange={[Function]}
                                      type="checkbox"
                                    />
                                  </span>
                                  <NoSsr
                                    defer={false}
                                    fallback={null}
                                  >
                                    <WithStyles(TouchRipple)
                                      center={true}
                                      innerRef={[Function]}
                                    >
                                      <TouchRipple
                                        center={true}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child-35",
                                            "childLeaving": "MuiTouchRipple-childLeaving-36",
                                            "childPulsate": "MuiTouchRipple-childPulsate-37",
                                            "ripple": "MuiTouchRipple-ripple-32",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate-34",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible-33",
                                            "root": "MuiTouchRipple-root-31",
                                          }
                                        }
                                      >
                                        <TransitionGroup
                                          childFactory={[Function]}
                                          className="MuiTouchRipple-root-31"
                                          component="span"
                                          enter={true}
                                          exit={true}
                                        >
                                          <span
                                            className="MuiTouchRipple-root-31"
                                          />
                                        </TransitionGroup>
                                      </TouchRipple>
                                    </WithStyles(TouchRipple)>
                                  </NoSsr>
                                </span>
                              </ButtonBase>
                            </WithStyles(ButtonBase)>
                          </IconButton>
                        </WithStyles(IconButton)>
                      </SwitchBase>
                    </WithFormControlContext(SwitchBase)>
                  </WithStyles(WithFormControlContext(SwitchBase))>
                </Checkbox>
              </WithStyles(Checkbox)>
            </CategoryCheckbox>
          </WithStyles(CategoryCheckbox)>
        </div>
        <div>
          translated: tool_card_categories.grammar
        </div>
      </div>
      <div
        style={
          Object {
            "alignSelf": "flex-end",
          }
        }
      >
        <Glyphicon
          bsClass="glyphicon"
          glyph="chevron-up"
          onClick={[Function]}
          style={
            Object {
              "fontSize": "18px",
              "margin": "0 12px 0 0",
              "textAlign": "right",
              "width": "20px",
            }
          }
        >
          <span
            className="glyphicon glyphicon-chevron-up"
            onClick={[Function]}
            style={
              Object {
                "fontSize": "18px",
                "margin": "0 12px 0 0",
                "textAlign": "right",
                "width": "20px",
              }
            }
          />
        </Glyphicon>
      </div>
      <div
        key="4"
        style={
          Object {
            "alignItems": "left",
            "display": "flex",
            "flexWrap": "wrap",
            "marginBottom": 5,
            "width": "100%",
          }
        }
      >
        <div
          key="0"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="figs-hypo"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="figs-hypo"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-right"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-right hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
        <div
          key="1"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="figs-activepassive"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="figs-activepassive"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-left"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-left hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
        <div
          key="2"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="figs-gendernotations"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="figs-gendernotations"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-right"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-right hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
        <div
          key="3"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="figs-pronouns"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="figs-pronouns"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-left"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-left hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
        <div
          key="4"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="figs-you"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="figs-you"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-right"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-right hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
        <div
          key="5"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="figs-123person"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="figs-123person"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-left"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-left hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
        <div
          key="6"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="figs-abstractnouns"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="figs-abstractnouns"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-right"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-right hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
        <div
          key="7"
          style={
            Object {
              "display": "flex",
              "width": "48%",
            }
          }
        >
          <div
            style={
              Object {
                "marginLeft": "36px",
                "marginRight": "10px",
              }
            }
          >
            <WithStyles(SubcategoryCheckbox)
              selectedCategories={
                Array [
                  "writing-background",
                  "translate-numbers",
                  "translate-fraction",
                  "figs-idiom",
                  "figs-irony",
                  "figs-metaphor",
                  "figs-rquestion",
                  "figs-simile",
                  "figs-apostrophe",
                  "figs-explicit",
                  "figs-hypo",
                  "figs-activepassive",
                  "figs-pronouns",
                  "figs-you",
                  "figs-123person",
                  "figs-abstractnouns",
                ]
              }
              subcategory="figs-distinguish"
              toolName="translationNotes"
            >
              <SubcategoryCheckbox
                classes={
                  Object {
                    "checked": "SubcategoryCheckbox-checked-39",
                    "root": "SubcategoryCheckbox-root-38",
                  }
                }
                selectedCategories={
                  Array [
                    "writing-background",
                    "translate-numbers",
                    "translate-fraction",
                    "figs-idiom",
                    "figs-irony",
                    "figs-metaphor",
                    "figs-rquestion",
                    "figs-simile",
                    "figs-apostrophe",
                    "figs-explicit",
                    "figs-hypo",
                    "figs-activepassive",
                    "figs-pronouns",
                    "figs-you",
                    "figs-123person",
                    "figs-abstractnouns",
                  ]
                }
                subcategory="figs-distinguish"
                toolName="translationNotes"
              >
                <WithStyles(Checkbox)
                  checked={false}
                  classes={
                    Object {
                      "checked": "SubcategoryCheckbox-checked-39",
                      "root": "SubcategoryCheckbox-root-38",
                    }
                  }
                  onChange={[Function]}
                >
                  <Checkbox
                    checked={false}
                    checkedIcon={<pure(CheckBox) />}
                    classes={
                      Object {
                        "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                        "colorPrimary": "MuiCheckbox-colorPrimary-7",
                        "colorSecondary": "MuiCheckbox-colorSecondary-8",
                        "disabled": "MuiCheckbox-disabled-5",
                        "indeterminate": "MuiCheckbox-indeterminate-6",
                        "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38",
                      }
                    }
                    color="secondary"
                    icon={<pure(CheckBoxOutlineBlank) />}
                    indeterminate={false}
                    indeterminateIcon={<pure(IndeterminateCheckBox) />}
                    onChange={[Function]}
                  >
                    <WithStyles(WithFormControlContext(SwitchBase))
                      checked={false}
                      checkedIcon={<pure(CheckBox) />}
                      className=""
                      classes={
                        Object {
                          "checked": "MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                          "disabled": "MuiCheckbox-disabled-5",
                          "root": "MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                        }
                      }
                      icon={<pure(CheckBoxOutlineBlank) />}
                      inputProps={
                        Object {
                          "data-indeterminate": false,
                        }
                      }
                      onChange={[Function]}
                      type="checkbox"
                    >
                      <WithFormControlContext(SwitchBase)
                        checked={false}
                        checkedIcon={<pure(CheckBox) />}
                        className=""
                        classes={
                          Object {
                            "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                            "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                            "input": "MuiPrivateSwitchBase-input-12",
                            "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                          }
                        }
                        icon={<pure(CheckBoxOutlineBlank) />}
                        inputProps={
                          Object {
                            "data-indeterminate": false,
                          }
                        }
                        onChange={[Function]}
                        type="checkbox"
                      >
                        <SwitchBase
                          checked={false}
                          checkedIcon={<pure(CheckBox) />}
                          className=""
                          classes={
                            Object {
                              "checked": "MuiPrivateSwitchBase-checked-10 MuiCheckbox-checked-4 SubcategoryCheckbox-checked-39",
                              "disabled": "MuiPrivateSwitchBase-disabled-11 MuiCheckbox-disabled-5",
                              "input": "MuiPrivateSwitchBase-input-12",
                              "root": "MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8",
                            }
                          }
                          icon={<pure(CheckBoxOutlineBlank) />}
                          inputProps={
                            Object {
                              "data-indeterminate": false,
                            }
                          }
                          onChange={[Function]}
                          type="checkbox"
                        >
                          <WithStyles(IconButton)
                            className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                            component="span"
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <IconButton
                              className="MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit-14",
                                  "colorPrimary": "MuiIconButton-colorPrimary-15",
                                  "colorSecondary": "MuiIconButton-colorSecondary-16",
                                  "disabled": "MuiIconButton-disabled-17",
                                  "label": "MuiIconButton-label-18",
                                  "root": "MuiIconButton-root-13",
                                }
                              }
                              color="default"
                              component="span"
                              disabled={false}
                              onBlur={[Function]}
                              onFocus={[Function]}
                              tabIndex={null}
                            >
                              <WithStyles(ButtonBase)
                                centerRipple={true}
                                className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                component="span"
                                disabled={false}
                                focusRipple={true}
                                onBlur={[Function]}
                                onFocus={[Function]}
                                tabIndex={null}
                              >
                                <ButtonBase
                                  centerRipple={true}
                                  className="MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                  classes={
                                    Object {
                                      "disabled": "MuiButtonBase-disabled-20",
                                      "focusVisible": "MuiButtonBase-focusVisible-21",
                                      "root": "MuiButtonBase-root-19",
                                    }
                                  }
                                  component="span"
                                  disableRipple={false}
                                  disableTouchRipple={false}
                                  disabled={false}
                                  focusRipple={true}
                                  onBlur={[Function]}
                                  onFocus={[Function]}
                                  tabIndex={null}
                                  type="button"
                                >
                                  <span
                                    className="MuiButtonBase-root-19 MuiIconButton-root-13 MuiPrivateSwitchBase-root-9 MuiCheckbox-root-3 SubcategoryCheckbox-root-38 MuiCheckbox-colorSecondary-8"
                                    onBlur={[Function]}
                                    onContextMenu={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={null}
                                  >
                                    <span
                                      className="MuiIconButton-label-18"
                                    >
                                      <pure(CheckBoxOutlineBlank)>
                                        <CheckBoxOutlineBlank>
                                          <WithStyles(SvgIcon)>
                                            <SvgIcon
                                              classes={
                                                Object {
                                                  "colorAction": "MuiSvgIcon-colorAction-25",
                                                  "colorDisabled": "MuiSvgIcon-colorDisabled-27",
                                                  "colorError": "MuiSvgIcon-colorError-26",
                                                  "colorPrimary": "MuiSvgIcon-colorPrimary-23",
                                                  "colorSecondary": "MuiSvgIcon-colorSecondary-24",
                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit-28",
                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge-30",
                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall-29",
                                                  "root": "MuiSvgIcon-root-22",
                                                }
                                              }
                                              color="inherit"
                                              component="svg"
                                              fontSize="default"
                                              viewBox="0 0 24 24"
                                            >
                                              <svg
                                                aria-hidden="true"
                                                className="MuiSvgIcon-root-22"
                                                focusable="false"
                                                role="presentation"
                                                viewBox="0 0 24 24"
                                              >
                                                <path
                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                />
                                              </svg>
                                            </SvgIcon>
                                          </WithStyles(SvgIcon)>
                                        </CheckBoxOutlineBlank>
                                      </pure(CheckBoxOutlineBlank)>
                                      <input
                                        checked={false}
                                        className="MuiPrivateSwitchBase-input-12"
                                        data-indeterminate={false}
                                        onChange={[Function]}
                                        type="checkbox"
                                      />
                                    </span>
                                    <NoSsr
                                      defer={false}
                                      fallback={null}
                                    />
                                  </span>
                                </ButtonBase>
                              </WithStyles(ButtonBase)>
                            </IconButton>
                          </WithStyles(IconButton)>
                        </SwitchBase>
                      </WithFormControlContext(SwitchBase)>
                    </WithStyles(WithFormControlContext(SwitchBase))>
                  </Checkbox>
                </WithStyles(Checkbox)>
              </SubcategoryCheckbox>
            </WithStyles(SubcategoryCheckbox)>
          </div>
          <Hint
            label="Article Not Found: undefined: Could not find article for undefined"
            position="top-left"
            size="large"
          >
            <span
              aria-label="Article Not Found: undefined: Could not find article for undefined"
              className="hint--top-left hint--large"
            >
              <div
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
              />
            </span>
          </Hint>
        </div>
      </div>
    </div>
  </div>
</ToolCardBoxes>
`;

exports[`translationWords should have three boxes unchecked 1`] = `
<div
  style={
    Object {
      "margin": "0 2% 0 6%",
    }
  }
/>
`;
